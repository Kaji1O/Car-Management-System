/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Appliances_Info;

import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;





/**
 *
 * @author redde
 */
public class Appliances_Info extends javax.swing.JFrame {

    
   ArrayList <String[]> list = new ArrayList<String[]>();// arrayList;
    public Appliances_Info() {
        initComponents();
        setLocation(400,200);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtModelNumber = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        comboBoxCategory = new javax.swing.JComboBox<>();
        company = new javax.swing.JRadioButton();
        community = new javax.swing.JRadioButton();
        none = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        txtDiscount = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtTotalPrice = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        buttonAdd = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        D_label = new javax.swing.JLabel();
        model1 = new javax.swing.JLabel();
        P_label1 = new javax.swing.JLabel();
        comboBox_category = new javax.swing.JComboBox<>();
        buttonSearch = new javax.swing.JButton();
        buttonUpdate = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        N_name = new javax.swing.JLabel();
        comboBoxPrice = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu = new javax.swing.JMenu();
        openFile = new javax.swing.JMenuItem();
        exit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        help = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Car Management System");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 20, 300, -1));

        jLabel2.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Model Number:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, -1, -1));

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNameKeyReleased(evt);
            }
        });
        jPanel1.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 220, 120, -1));

        jLabel3.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Name:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 223, -1, -1));

        txtModelNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtModelNumberActionPerformed(evt);
            }
        });
        txtModelNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtModelNumberKeyPressed(evt);
            }
        });
        jPanel1.add(txtModelNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 130, 120, -1));

        jLabel4.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Price:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 258, -1, -1));

        comboBoxCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Sedan", "Sports", "SUV", "Pickup", "Hatchback", "" }));
        comboBoxCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxCategoryActionPerformed(evt);
            }
        });
        jPanel1.add(comboBoxCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 180, 120, -1));

        buttonGroup2.add(company);
        company.setForeground(new java.awt.Color(255, 255, 255));
        company.setText("Company");
        company.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                companyActionPerformed(evt);
            }
        });
        jPanel1.add(company, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 380, 94, -1));

        buttonGroup2.add(community);
        community.setForeground(new java.awt.Color(255, 255, 255));
        community.setText("Community");
        jPanel1.add(community, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 380, -1, -1));

        buttonGroup2.add(none);
        none.setForeground(new java.awt.Color(255, 255, 255));
        none.setSelected(true);
        none.setText("None");
        jPanel1.add(none, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 380, 93, -1));

        jLabel7.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Category:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 182, -1, -1));

        txtDiscount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDiscountKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDiscountKeyReleased(evt);
            }
        });
        jPanel1.add(txtDiscount, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 300, 120, -1));

        jLabel8.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(169, 330, -1, -1));

        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPriceKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPriceKeyReleased(evt);
            }
        });
        jPanel1.add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 260, 120, -1));

        jLabel9.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Total Price:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 340, -1, -1));

        txtTotalPrice.setEditable(false);
        txtTotalPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalPriceActionPerformed(evt);
            }
        });
        jPanel1.add(txtTotalPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 340, 120, -1));

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Model No", "Category", "Name", "Price", "Discount", "Total Price", "Recommended by"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Table.setGridColor(new java.awt.Color(255, 255, 153));
        Table.setSelectionForeground(new java.awt.Color(255, 255, 153));
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Table);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 130, 790, 240));

        jLabel10.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Discount:");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 300, -1, -1));

        buttonAdd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonAdd.setText("Add");
        buttonAdd.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });
        jPanel1.add(buttonAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 420, 117, 30));

        jLabel11.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Recommended By:");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 380, -1, -1));

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        jPanel1.add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 520, 180, 30));

        D_label.setForeground(new java.awt.Color(255, 0, 51));
        jPanel1.add(D_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 320, 170, 20));

        model1.setForeground(new java.awt.Color(255, 0, 51));
        jPanel1.add(model1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 160, 170, 20));

        P_label1.setForeground(new java.awt.Color(255, 0, 51));
        jPanel1.add(P_label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 280, 170, 20));

        comboBox_category.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Category", "Sedan", "Sports", "Hatchback", "SUV", "Pickup" }));
        comboBox_category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBox_categoryActionPerformed(evt);
            }
        });
        jPanel1.add(comboBox_category, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 560, 120, 30));

        buttonSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Appliances_Info/search logo.png"))); // NOI18N
        buttonSearch.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        buttonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchActionPerformed(evt);
            }
        });
        jPanel1.add(buttonSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 520, 40, 30));

        buttonUpdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonUpdate.setText("Update");
        buttonUpdate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(buttonUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 420, 80, 30));

        buttonDelete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonDelete.setText("Delete");
        buttonDelete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(buttonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 420, 70, 30));
        jPanel1.add(N_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 240, 150, 20));

        comboBoxPrice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Price", "3000000", "4000000", "5000000", "6000000", "7000000", "8000000", "9000000", "10000000", "11000000", "12000000", "13000000", "14000000", "15000000", "50000000", "55500000", "70000000", "100000000" }));
        comboBoxPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxPriceActionPerformed(evt);
            }
        });
        jPanel1.add(comboBoxPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 560, 100, 30));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Appliances_Info/gyub.jpg"))); // NOI18N
        jLabel6.setToolTipText("");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, -50, 1330, 750));

        menu.setText("File");
        menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuActionPerformed(evt);
            }
        });

        openFile.setText("Open");
        openFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileActionPerformed(evt);
            }
        });
        menu.add(openFile);

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        menu.add(exit);

        jMenuBar1.add(menu);

        jMenu2.setText("Help");

        help.setText("User Guide");
        help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpActionPerformed(evt);
            }
        });
        jMenu2.add(help);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1308, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxCategoryActionPerformed

    private void txtModelNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtModelNumberActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtModelNumberActionPerformed

    private void companyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_companyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_companyActionPerformed

    private void menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuActionPerformed
    // TODO add your handling code here:
    }//GEN-LAST:event_menuActionPerformed

    private void openFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileActionPerformed
       boolean isCSVImported = false;
        DefaultTableModel model = (DefaultTableModel)Table.getModel();
     // TODO add your handling code here:
     if (!isCSVImported)
        {
            String line;
            String fileLocation = getFileLocation();
            System.out.println(fileLocation);
            try 
            {

                BufferedReader br = new BufferedReader(new FileReader(fileLocation));
                while ((line = br.readLine())!= null)
                {
                    System.out.println(line);
                    String [] data = line.split(",");
                    list.add(data);
                    isCSVImported=true;
                       
                    populatetable(data);
                }
            } 
            catch (FileNotFoundException e)
            {
                JOptionPane.showMessageDialog(null,e + "","Alert",JOptionPane.WARNING_MESSAGE);
            }
            catch (IOException e)
            {
                 JOptionPane.showMessageDialog(null,e + "","Alert",JOptionPane.WARNING_MESSAGE);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null,"File has already been imported","Alert",JOptionPane.WARNING_MESSAGE);
        }
                              
    }//GEN-LAST:event_openFileActionPerformed
private static String getFileLocation()
    {
        String fileLocation=System.getProperty("user.dir") +("\\src\\Appliances_Info\\Record.csv");
        return fileLocation;
    }
public void populatetable(String[] row)
    {
        String check;
        boolean exists = false;
        for (int i = 0; i <Table.getRowCount(); i++)
        {
            check = Table.getValueAt(i, 0).toString().trim();
            if (txtModelNumber.getText().equals(check))
            {
                exists = true;
                break;
            }
        }
        
        if (!exists)
        {
            DefaultTableModel model = (DefaultTableModel)Table.getModel();
            model.addRow(row);
            
            clear();
        } 
        else
        {
            JOptionPane.showMessageDialog(null, "The model number already exits");
        }        
    }
    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
    System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
        // TODO add your handling code here:
        add();
    }//GEN-LAST:event_buttonAddActionPerformed

    private void txtPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyPressed
        //  Price TextField only accept integer;
        char price = evt.getKeyChar();
        if (Character.isLetter(price))
        {
            txtPrice.setEditable(false);
            P_label1.setText("*Numbers only");
        }
        else
        {
            txtPrice.setEditable(true);
        }
    }//GEN-LAST:event_txtPriceKeyPressed

    private void txtDiscountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiscountKeyPressed
        // Discount textField only accept ineger.
        char discount = evt.getKeyChar();
        if(Character.isLetter(discount))
        {
            txtDiscount.setEditable(false);
            D_label.setText("*Numbers olny");
        }
        else
        {
            txtDiscount.setEditable(true);
        }
        
    }//GEN-LAST:event_txtDiscountKeyPressed

    private void txtTotalPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalPriceActionPerformed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_txtTotalPriceActionPerformed

    private void txtModelNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtModelNumberKeyPressed
        // TODO add your handling code here:
        char model = evt.getKeyChar();
        if(Character.isLetter(model))
        {
            txtModelNumber.setEditable(false);
            model1.setText("*Numbers only");
            
        }
        else
        {
            txtModelNumber.setEditable(true);
        }
    }//GEN-LAST:event_txtModelNumberKeyPressed

    private void txtDiscountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiscountKeyReleased
        // auto calculating the price of vehicles and displaying in total price textfield.
        try{
        String Price = txtPrice.getText();
        float price = Float.parseFloat(Price);
        String discount=txtDiscount.getText();
        float dis = Float.parseFloat(discount);
        float total = (price-(price*dis)/100);
        String Total_price = String.valueOf(total);
        
        if(txtDiscount.getText().equals("") )
        {
            txtTotalPrice.setText("0.00");
            
        }
        else
        {
           
             txtTotalPrice.setText(Total_price);
            
        }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_txtDiscountKeyReleased

    private void txtPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyReleased
        // TODO add your handling code here:
        
            if(Integer.parseInt(txtPrice.getText())<= 0)
                {
                    JOptionPane.showMessageDialog(this,"Error: Price cannot be negative or null");
                }
            
       
    }//GEN-LAST:event_txtPriceKeyReleased

    private void comboBox_categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBox_categoryActionPerformed
        // show comboBox_category data into search TextField;
        String category = (String)comboBox_category.getSelectedItem();
        txtSearch.setText(category);
        comboBox_category.setSelectedItem("Select Category");
        
    }//GEN-LAST:event_comboBox_categoryActionPerformed

    private void buttonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearchActionPerformed
        // search code for price and category
        String searchCategory = txtSearch.getText();
        if(searchCategory.equals("Sedan") || searchCategory.equals("Sports") || searchCategory.equals("Hatchback") || searchCategory.equals("SUV") || searchCategory.equals("Pickup")){
            int count=0;
            String result;
            String info ="";
            for(int i=0;i<list.size();i++){
                String category = Table.getValueAt(i,1).toString();
                if(searchCategory.equals(category)){
                    String modelNumber = Table.getValueAt(i,0).toString();
                    String name = Table.getValueAt(i,2).toString();
                    String price = Table.getValueAt(i,3).toString();
                    String discount = Table.getValueAt(i,4).toString();
                    String totalPrice = Table.getValueAt(i,5).toString();
                    String recommendation = Table.getValueAt(i,6).toString();
                    
                    count++;
                    info += ( " ModelNumber :"+modelNumber+" Price :"+price+" Discount :"+discount+" TotalPrice :"+totalPrice+" Recommendation :"+recommendation+"\n");
                }
            }
            result = "There are " +count+" different types of car available in   "+searchCategory+ " category \n"+info;
            JOptionPane.showMessageDialog(null,result);
        }
        else{
        if(txtSearch.getText().compareTo("") == 0){
            JOptionPane.showMessageDialog(null,"Search TextField found empty","ERROR",JOptionPane.ERROR_MESSAGE);
        }else{
            
            for(int i=0;i<list.size();i++){
                int searchValue = Integer.parseInt(list.get(i)[3]);
                int  index = i;
                for(int j=i+1;j<list.size();j++){
                    int check = Integer.parseInt(list.get(i)[3]);
                    if(check<searchValue){
                        searchValue=check;
                        index=j;
                    }
                }
                String[] temp = list.get(i);
                list.set(i,list.get(index)); 
                list.set(index,temp);
            }
             int key = Integer.parseInt(txtSearch.getText());
            int low = 0;
            int high = list.size()-1;
            int mid = 0;
            boolean found = false;
            while (low <= high) 
            {
                mid = (high+low)/2;
                int val = Integer.parseInt(list.get(mid)[3]);
                if (key == val)
                {
                    found = true;
                    break;
                }
                else if(key < val)
                    high = mid-1;
                else
                    low = mid+1;
            }
            if(found){
                JOptionPane.showMessageDialog(null,"Model Number :"+list.get(mid)[0]+ "\n Category :"+list.get(mid)[1]+"\n Name :"+list.get(mid)[2]+"\n Discount:" +list.get(mid)[4]+"\n TotalPrice :"+list.get(mid)[5]+"\n Recommended by :"+list.get(mid)[6]);
            }
            else{
                JOptionPane.showMessageDialog(null,"The Car of Selected Price "+key+" cannot be found.","ERROR",JOptionPane.ERROR_MESSAGE);
            }
            
                
        }
        }
        txtSearch.setText("");
    }//GEN-LAST:event_buttonSearchActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)Table.getModel();
        String modelNumber = model.getValueAt(Table.getSelectedRow(),0).toString();
        String category =model.getValueAt(Table.getSelectedRow(),1).toString();
        String name = model.getValueAt(Table.getSelectedRow(),2).toString();
        String price = model.getValueAt(Table.getSelectedRow(),3).toString();
        String discount = model.getValueAt(Table.getSelectedRow(),4).toString();
        String total = model.getValueAt(Table.getSelectedRow(),5).toString();
        String recommendation = model.getValueAt(Table.getSelectedRow(), 5).toString();
        
        // setting the text into the TextField;
        txtModelNumber.setText(modelNumber);
        comboBoxCategory.setSelectedItem(category);
        txtName.setText(name);
        txtPrice.setText(price);
        txtDiscount.setText(discount);
        txtTotalPrice.setText(total);
       // buttonGroup2.setSelected();
    }//GEN-LAST:event_TableMouseClicked

    private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateActionPerformed
        // TODO add your handling code here:  
        DefaultTableModel model = (DefaultTableModel)Table.getModel();
        String modelNumber = txtModelNumber.getText();
        String category = comboBoxCategory.getSelectedItem().toString();
        String name = txtName.getText();
        String price = txtPrice.getText();
        String discount = txtDiscount.getText();
        String total = txtTotalPrice.getText();
        String recommendation = buttonGroup2.getSelection().getActionCommand();
        
        if(Table.getSelectedRowCount() == 1)
        {
        model.setValueAt(modelNumber, Table.getSelectedRow(),0);
        model.setValueAt(category, Table.getSelectedRow(),1);
        model.setValueAt(name, Table.getSelectedRow(),2);
        model.setValueAt(price, Table.getSelectedRow(),3);
        model.setValueAt(discount, Table.getSelectedRow(),4);
        model.setValueAt(total, Table.getSelectedRow(),5);
        model.setValueAt(recommendation,Table.getSelectedRow(),6);
        
        clear();
        }
        else
        {
            if(Table.getSelectedRowCount()==0)
            {
                JOptionPane.showMessageDialog(this,"Please select a row","ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_buttonUpdateActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed

        DefaultTableModel model = (DefaultTableModel)Table.getModel();
        if(Table.getSelectedRowCount()==1)
        {
            model.removeRow(Table.getSelectedRow());
            JOptionPane.showMessageDialog(this,"The selected row has been deleted successfully");
        }
        else
        {
               if(Table.getSelectedRowCount()==0)
               {
                   JOptionPane.showMessageDialog(this,"Table is empty");
               }
               else
               {
                   JOptionPane.showMessageDialog(this,"Please select a row");
               }
        }
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void txtNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtNameKeyReleased

    private void txtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyPressed
        // TODO add your handling code here:
        char name=evt.getKeyChar();
        if(Character.isLetter(name) || Character.isWhitespace(name) || Character.isISOControl(name))
        {
            txtName.setEditable(true);
        }
        else
        {
            txtName.setEditable(false);
            N_name.setText("Enter letters only");
        } 
    }//GEN-LAST:event_txtNameKeyPressed

    private void comboBoxPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxPriceActionPerformed
        // show conboBoxPrice data into the search TextField;
        String price = (String)comboBoxPrice.getSelectedItem();
        txtSearch.setText(price);
        comboBoxPrice.setSelectedItem("Price");
    }//GEN-LAST:event_comboBoxPriceActionPerformed

    private void helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpActionPerformed

    File file=new File("src/Appliances_Info/userManual.pdf");
        try {
            Desktop.getDesktop().open(file);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "File not found");
    }//GEN-LAST:event_helpActionPerformed
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Appliances_Info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Appliances_Info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Appliances_Info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Appliances_Info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginPage().setVisible(true);
            }
        });
    }
    
    
    
    
public void clear(){
    // method to set the textField to their original form;
    txtModelNumber.setText("");
    comboBoxCategory.setSelectedItem("Select");
    txtName.setText("");
    txtPrice.setText("");
    txtDiscount.setText("");
    txtTotalPrice.setText("");
    none.setSelected(true );
    community.setSelected(false);
    company.setSelected(false); 
            
}
public void add(){
    if(txtModelNumber.getText().equals("")|| comboBoxCategory.getSelectedItem().equals("Select") || txtName.getText().equals("") || txtPrice.getText().equals("") || txtDiscount.getText().equals(""))
    {
        JOptionPane.showMessageDialog(null,"Fill all the TextField properly","ERROR",JOptionPane.ERROR_MESSAGE);
    }else
    {
    String modelNumber = txtModelNumber.getText();
    String category = (String)comboBoxCategory.getSelectedItem();
    String name = txtName.getText();
    String price = txtPrice.getText();
    String discount = txtDiscount.getText();
    String totalPrice = txtTotalPrice.getText();
    none.setActionCommand("none");
    community.setActionCommand("Community");
    company.setActionCommand("Company");
    String recommendation =buttonGroup2.getSelection().getActionCommand();
    
    DefaultTableModel model=(DefaultTableModel)Table.getModel();
    String[] obj = {modelNumber, category,name,price,discount,totalPrice,recommendation};
    populatetable(obj);
    list.add(obj);
    //Data.add(new systemData(Integer.valueOf(modelNumber),category,name,Double.valueOf(price),Double.valueOf(discount),Double.valueOf(totalPrice),recommendation));
}

}

    
    
    








    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel D_label;
    private javax.swing.JLabel N_name;
    private javax.swing.JLabel P_label1;
    private javax.swing.JTable Table;
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonDelete;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton buttonSearch;
    private javax.swing.JButton buttonUpdate;
    private javax.swing.JComboBox<String> comboBoxCategory;
    private javax.swing.JComboBox<String> comboBoxPrice;
    private javax.swing.JComboBox<String> comboBox_category;
    private javax.swing.JRadioButton community;
    private javax.swing.JRadioButton company;
    private javax.swing.JMenuItem exit;
    private javax.swing.JMenuItem help;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenu menu;
    private javax.swing.JLabel model1;
    private javax.swing.JRadioButton none;
    private javax.swing.JMenuItem openFile;
    private javax.swing.JTextField txtDiscount;
    private javax.swing.JTextField txtModelNumber;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTotalPrice;
    // End of variables declaration//GEN-END:variables

    private void add(String[] data) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
